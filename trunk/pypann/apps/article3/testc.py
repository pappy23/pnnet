#!/usr/bin/env python

#
# testc.py
#
import sys
from random import shuffle, choice
from datetime import datetime
from timeit import Timer
from pypann import *

if __name__ == "__main__":
    print "Starting at {0}".format(datetime.now())
    data = [
            ([
                0,0,1,1,1,1,1,1,1,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,0,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,0,0,0,0,0,1,1,0,0,
                0,0,1,1,1,1,1,1,1,1,1,0,0,
                0,0,1,1,1,1,1,1,1,1,1,0,0
                ], [1,0]),
            ([
                0,0,0,0,0,1,1,1,0,0,0,0,0,
                0,0,0,0,1,1,1,1,0,0,0,0,0,
                0,0,0,0,1,1,1,1,0,0,0,0,0,
                0,0,0,1,1,1,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0,
                0,0,0,0,0,0,1,1,0,0,0,0,0
                ], [0,1])]
            #([
            #    0,0,0,1,1,1,1,1,1,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,1,0,0,0,
            #    0,0,1,1,0,0,0,0,1,1,0,0,0,
            #    0,0,1,1,0,0,0,1,1,0,0,0,0,
            #    0,0,0,0,0,0,0,1,1,0,0,0,0,
            #    0,0,0,0,0,0,1,1,0,0,0,0,0,
            #    0,0,0,0,0,0,1,1,0,0,0,0,0,
            #    0,0,0,0,0,1,1,0,0,0,0,0,0,
            #    0,0,0,0,1,1,0,0,0,0,0,0,0,
            #    0,0,0,0,1,1,0,0,0,0,0,0,0,
            #    0,0,0,1,1,1,1,1,1,1,1,0,0,
            #    0,0,0,1,1,1,1,1,1,1,1,0,0,
            #    0,0,0,0,0,0,0,0,0,0,0,0,0
            #    ], [0,0,1,0,0,0,0,0,0,0]),
            #([
            #    0,0,0,0,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,0,0,0,0,0,1,0,0,0,
            #    0,0,0,0,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,1,1,1,1,1,1,0,0,0
            #    ], [0,0,0,1,0,0,0,0,0,0]),
            #([
            #    0,0,0,1,1,0,0,0,1,1,0,0,0,
            #    0,0,0,1,1,0,0,0,1,1,0,0,0,
            #    0,0,0,1,1,0,0,0,1,1,0,0,0,
            #    0,0,0,1,1,0,0,0,1,1,0,0,0,
            #    0,0,0,1,1,0,0,0,1,1,0,0,0,
            #    0,0,0,1,1,1,1,1,1,1,0,0,0,
            #    0,0,0,1,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0
            #    ], [0,0,0,0,1,0,0,0,0,0]),
            #([
            #    0,0,1,1,1,1,1,1,1,1,0,0,0,
            #    0,0,1,1,1,1,1,1,1,1,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,0,0,0,0,0,0,1,1,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,0,0,0,0,0,0,0,0,0,0,0
            #    ], [0,0,0,0,0,1,0,0,0,0]),
            #([
            #    0,0,0,0,0,0,0,1,1,0,0,0,0,
            #    0,0,0,0,0,1,1,1,1,0,0,0,0,
            #    0,0,0,0,1,1,1,0,0,0,0,0,0,
            #    0,0,0,1,1,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,1,1,0,0,0,0,1,1,0,0,0,
            #    0,0,1,1,0,0,0,0,1,1,0,0,0,
            #    0,0,1,1,0,0,0,0,1,1,0,0,0,
            #    0,0,1,1,1,1,1,1,1,0,0,0,0,
            #    0,0,0,1,1,1,1,1,1,0,0,0,0
            #    ], [0,0,0,0,0,0,1,0,0,0]),
            #([
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,0,0,0,0,0,0,0,1,1,0,0,
            #    0,0,0,0,0,0,0,0,1,1,1,0,0,
            #    0,0,0,0,0,0,0,1,1,0,0,0,0,
            #    0,0,0,0,0,0,1,1,0,0,0,0,0,
            #    0,0,0,0,0,1,1,0,0,0,0,0,0,
            #    0,0,0,0,1,1,0,0,0,0,0,0,0,
            #    0,0,1,1,1,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,1,1,0,0,0,0,0,0,0,0,0,
            #    0,0,0,0,0,0,0,0,0,0,0,0,0
            #    ], [0,0,0,0,0,0,0,1,0,0]),
            #([
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0
            #    ], [0,0,0,0,0,0,0,0,1,0]),
            #([
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,0,0,0,0,0,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,1,1,1,1,1,1,1,1,1,0,0,
            #    0,0,0,0,0,0,0,0,0,1,1,0,0,
            #    0,0,0,0,0,0,0,0,0,1,1,0,0,
            #    0,0,0,0,0,0,0,0,0,1,1,0,0,
            #    0,0,0,1,1,1,1,1,1,1,0,0,0,
            #    0,0,0,1,1,1,1,1,1,1,0,0,0
            #    ], [0,0,0,0,0,0,0,0,0,1])
            #]
    """Create net"""
    net = convolutional_network(
            layers = [10,2],
            connection_density = 0.8,
            window_height = 3,
            window_width = 3,
            window_vert_overlap = 1,
            window_horiz_overlap = 1
            )
    net = multilayer_perceptron([169,2])

    """Randomize weights"""
    net.weight_randomization_attributes = Attributes()
    net.weight_randomization_attributes.min = -0.01
    net.weight_randomization_attributes.max = +0.01
    net.run(Runners.randomize_weights_gauss)

    """Print network structure"""
    print "Net cache:"
    for l in net._cache.layers:
        print len(l),
    print

    """Prepare data for training"""
    train_data = []
    for p in data:
        train_data.append((squash(p[0], 0,1, -1,+1), squash(p[1], 0,1, -2,+2)))

    """Init training"""
    lms(net, [])
    net.lms_attributes.learning_rate = 0.1
    net.lms_attributes.annealing_tsc = 50
    epochs = 50

    """Training"""
    print "Training for {0} epochs... (using {1} threads)".format(epochs, net.worker_threads_count)
    for i in range(epochs):
        shuffle(train_data)
        error = mse(lms(net, train_data))
        print "{0}\t{1}".format(i+1, error)
    print "Training finished"

    """Testing"""
    for p in train_data:
        net.set_input(p[0])
        net.run()
        print "d = {0}\to = {1}".format(p[1], net.get_output())

    print "Finished at {0}".format(datetime.now())


