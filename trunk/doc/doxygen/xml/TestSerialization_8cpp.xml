<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="TestSerialization_8cpp" kind="file">
    <compoundname>TestSerialization.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="Includes_8h" local="yes">Includes.h</includes>
    <incdepgraph>
      <node id="5154">
        <label>list</label>
      </node>
      <node id="5156">
        <label>valarray</label>
      </node>
      <node id="5177">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="5160">
        <label>limits</label>
      </node>
      <node id="5179">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="5168">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="5159">
        <label>iterator</label>
      </node>
      <node id="5164">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="5161">
        <label>cmath</label>
      </node>
      <node id="5169">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="5157">
        <label>string</label>
      </node>
      <node id="5153">
        <label>map</label>
      </node>
      <node id="5166">
        <label>boost/thread.hpp</label>
      </node>
      <node id="5175">
        <label>boost/serialization/tracking.hpp</label>
      </node>
      <node id="5150">
        <label>exception</label>
      </node>
      <node id="5152">
        <label>fstream</label>
      </node>
      <node id="5176">
        <label>boost/serialization/export.hpp</label>
      </node>
      <node id="5173">
        <label>boost/serialization/base_object.hpp</label>
      </node>
      <node id="5163">
        <label>boost/any.hpp</label>
      </node>
      <node id="5170">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="5174">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="5165">
        <label>boost/progress.hpp</label>
      </node>
      <node id="5149">
        <label>Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="5150" relation="include">
        </childnode>
        <childnode refid="5148" relation="include">
        </childnode>
        <childnode refid="5151" relation="include">
        </childnode>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5157" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5163" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5165" relation="include">
        </childnode>
        <childnode refid="5166" relation="include">
        </childnode>
        <childnode refid="5167" relation="include">
        </childnode>
        <childnode refid="5168" relation="include">
        </childnode>
        <childnode refid="5169" relation="include">
        </childnode>
        <childnode refid="5170" relation="include">
        </childnode>
        <childnode refid="5171" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5173" relation="include">
        </childnode>
        <childnode refid="5174" relation="include">
        </childnode>
        <childnode refid="5175" relation="include">
        </childnode>
        <childnode refid="5176" relation="include">
        </childnode>
        <childnode refid="5177" relation="include">
        </childnode>
        <childnode refid="5178" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
      </node>
      <node id="5155">
        <label>vector</label>
      </node>
      <node id="5167">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="5147">
        <label>pann/trunk/src/UnitTests/TestSerialization.cpp</label>
        <link refid="TestSerialization.cpp"/>
        <childnode refid="5148" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
      </node>
      <node id="5151">
        <label>sstream</label>
      </node>
      <node id="5162">
        <label>cstdlib</label>
      </node>
      <node id="5148">
        <label>iostream</label>
      </node>
      <node id="5178">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="5171">
        <label>boost/serialization/nvp.hpp</label>
      </node>
      <node id="5172">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="5158">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innerclass refid="classA" prot="public">A</innerclass>
    <innerclass refid="classAder1" prot="public">Ader1</innerclass>
    <innerclass refid="classAder2" prot="public">Ader2</innerclass>
    <innerclass refid="classN" prot="public">N</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="TestSerialization_8cpp_1e66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/UnitTests/TestSerialization.cpp" line="71" bodyfile="/home/booble/pann/trunk/src/UnitTests/TestSerialization.cpp" bodystart="70" bodyend="92"/>
        <references refid="classN_128730570164b084e340eb0aa4d5cc206" compoundref="TestSerialization_8cpp" startline="58">N::af</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//TestNet.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Includes_8h" kindref="compound">Includes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classA" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classA" kindref="compound">A</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classA_11a592b3c31f807b534809ac7cb5c66ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classA_11a592b3c31f807b534809ac7cb5c66ac" kindref="member">test</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">boost::serialization::access;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="17" refid="classA_1c67ea05708b62131de07d0d0f8808ecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classA_1c67ea05708b62131de07d0d0f8808ecd" kindref="member">serialize</ref>(Archive<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;A\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classAder1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAder1" kindref="compound">Ader1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classA" kindref="compound">A</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25" refid="classAder1_1850cf40119e9793c5584388a6ccb02a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAder1_1850cf40119e9793c5584388a6ccb02a3" kindref="member">test</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classAder1_1f1d07697d97ec0345b2a9de4e74a15eb" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classAder1_1c98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAder1_1c98d07dd8f7b70e16ccb9a01abf56b9c" kindref="member">boost::serialization::access</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="32" refid="classAder1_1746da025b482888b941b2b26902a99f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAder1_1746da025b482888b941b2b26902a99f5" kindref="member">serialize</ref>(Archive<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Ader1\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/><ref refid="classAder1_1f1d07697d97ec0345b2a9de4e74a15eb" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classAder2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAder2" kindref="compound">Ader2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classA" kindref="compound">A</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="classAder2_1ded5ab13c7844a013f951c870df9576b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAder2_1ded5ab13c7844a013f951c870df9576b" kindref="member">test</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classAder2_1aa8b778d5d51da45dfa0b0f66c3dd9e4" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classAder2_1c98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAder2_1c98d07dd8f7b70e16ccb9a01abf56b9c" kindref="member">boost::serialization::access</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="48" refid="classAder2_1d135cb5af07c2014bfcc9acd02004156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAder2_1d135cb5af07c2014bfcc9acd02004156" kindref="member">serialize</ref>(Archive<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Ader2\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/><ref refid="classAder2_1aa8b778d5d51da45dfa0b0f66c3dd9e4" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classN" kindref="compound">N</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classN_128730570164b084e340eb0aa4d5cc206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classA" kindref="compound">A</ref>*<sp/><ref refid="classN_128730570164b084e340eb0aa4d5cc206" kindref="member">af</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classN_1c98d07dd8f7b70e16ccb9a01abf56b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classN_1c98d07dd8f7b70e16ccb9a01abf56b9c" kindref="member">boost::serialization::access</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="63" refid="classN_10697832f854e511643076957badb1df2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classN_10697832f854e511643076957badb1df2" kindref="member">serialize</ref>(Archive<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;N\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/><ref refid="classN_128730570164b084e340eb0aa4d5cc206" kindref="member">af</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="TestSerialization_8cpp_1e66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="TestBoost_8cpp_1e66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classN" kindref="compound">N</ref><sp/>obj1,<sp/>obj2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>obj1.<ref refid="classN_128730570164b084e340eb0aa4d5cc206" kindref="member">af</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classAder1" kindref="compound">Ader1</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classAder1" kindref="compound">Ader1</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj1.<ref refid="classN_128730570164b084e340eb0aa4d5cc206" kindref="member">af</ref>))-&gt;b<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofstream<sp/>ofs(</highlight><highlight class="stringliteral">&quot;ser.txt&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::text_oarchive<sp/>oa(ofs);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oa<sp/>&lt;&lt;<sp/>obj1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifstream<sp/>ifs(</highlight><highlight class="stringliteral">&quot;ser.txt&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::archive::text_iarchive<sp/>ia(ifs);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia<sp/>&gt;&gt;<sp/>obj2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;dynamic_cast&lt;Ader1*&gt;(obj2.<ref refid="classN_128730570164b084e340eb0aa4d5cc206" kindref="member">af</ref>)-&gt;b&lt;&lt;endl;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/UnitTests/TestSerialization.cpp"/>
  </compounddef>
</doxygen>
