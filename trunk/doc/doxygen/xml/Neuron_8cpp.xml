<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="Neuron_8cpp" kind="file">
    <compoundname>Neuron.cpp</compoundname>
    <includes refid="Neuron_8h" local="yes">Neuron.h</includes>
    <incdepgraph>
      <node id="3681">
        <label>list</label>
      </node>
      <node id="3683">
        <label>valarray</label>
      </node>
      <node id="3704">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="3687">
        <label>limits</label>
      </node>
      <node id="3706">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="3695">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="3686">
        <label>iterator</label>
      </node>
      <node id="3710">
        <label>Exception.h</label>
        <link refid="Exception_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3691">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="3688">
        <label>cmath</label>
      </node>
      <node id="3696">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="3684">
        <label>string</label>
      </node>
      <node id="3680">
        <label>map</label>
      </node>
      <node id="3693">
        <label>boost/thread.hpp</label>
      </node>
      <node id="3708">
        <label>ActivationFunction.h</label>
        <link refid="ActivationFunction_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3709" relation="include">
        </childnode>
        <childnode refid="3710" relation="include">
        </childnode>
      </node>
      <node id="3702">
        <label>boost/serialization/tracking.hpp</label>
      </node>
      <node id="3676">
        <label>exception</label>
      </node>
      <node id="3679">
        <label>fstream</label>
      </node>
      <node id="3703">
        <label>boost/serialization/export.hpp</label>
      </node>
      <node id="3700">
        <label>boost/serialization/base_object.hpp</label>
      </node>
      <node id="3690">
        <label>boost/any.hpp</label>
      </node>
      <node id="3697">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="3701">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="3692">
        <label>boost/progress.hpp</label>
      </node>
      <node id="3711">
        <label>Link.h</label>
        <link refid="Link_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
        <childnode refid="3712" relation="include">
        </childnode>
      </node>
      <node id="3712">
        <label>Weight.h</label>
        <link refid="Weight_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3709" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
      </node>
      <node id="3713">
        <label>Attributes.h</label>
        <link refid="Attributes_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3710" relation="include">
        </childnode>
        <childnode refid="3709" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
      </node>
      <node id="3675">
        <label>Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="3676" relation="include">
        </childnode>
        <childnode refid="3677" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
        <childnode refid="3685" relation="include">
        </childnode>
        <childnode refid="3686" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
        <childnode refid="3688" relation="include">
        </childnode>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3690" relation="include">
        </childnode>
        <childnode refid="3691" relation="include">
        </childnode>
        <childnode refid="3692" relation="include">
        </childnode>
        <childnode refid="3693" relation="include">
        </childnode>
        <childnode refid="3694" relation="include">
        </childnode>
        <childnode refid="3695" relation="include">
        </childnode>
        <childnode refid="3696" relation="include">
        </childnode>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3700" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3702" relation="include">
        </childnode>
        <childnode refid="3703" relation="include">
        </childnode>
        <childnode refid="3704" relation="include">
        </childnode>
        <childnode refid="3705" relation="include">
        </childnode>
        <childnode refid="3706" relation="include">
        </childnode>
      </node>
      <node id="3682">
        <label>vector</label>
      </node>
      <node id="3694">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="3678">
        <label>sstream</label>
      </node>
      <node id="3709">
        <label>Type.h</label>
        <link refid="Type_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3673">
        <label>pann/trunk/src/pann/Core/Neuron.cpp</label>
        <link refid="Neuron.cpp"/>
        <childnode refid="3674" relation="include">
        </childnode>
      </node>
      <node id="3689">
        <label>cstdlib</label>
      </node>
      <node id="3677">
        <label>iostream</label>
      </node>
      <node id="3674">
        <label>Neuron.h</label>
        <link refid="Neuron_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
        <childnode refid="3708" relation="include">
        </childnode>
        <childnode refid="3711" relation="include">
        </childnode>
        <childnode refid="3713" relation="include">
        </childnode>
      </node>
      <node id="3705">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="3698">
        <label>boost/serialization/nvp.hpp</label>
      </node>
      <node id="3707">
        <label>Object.h</label>
        <link refid="Object_8h"/>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3699">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="3685">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepann">pann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//Neuron.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Neuron_8h" kindref="compound">Neuron.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pann</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="classpann_1_1Neuron_1eb0f836051ce56055b3fd7ca3ade67dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_189d63cff9e559e1cbdbdc3c9dbc2efe6" kindref="member">Neuron::Neuron</ref>(<ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">ActivationFunction::Base</ref>*<sp/>_activationFunction)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_1bd0230c56464055cc2dcae4da86c5f73" kindref="member">activationFunction</ref><sp/>=<sp/>_activationFunction;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_1b22b8940b68c650c5c11c2ee9ea777a1" kindref="member">ownerThread</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_1cc966b3f4aa4ee2f158ab70196642fc4" kindref="member">receptiveField</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_179899694b4dbaa30551f9f6784ddd869" kindref="member">activationValue</ref><sp/>=<sp/>_activationFunction-&gt;<ref refid="classpann_1_1ActivationFunction_1_1Base_16f8d64be53a32ddfe46abb3501849628" kindref="member">f</ref>(0);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//Neuron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classpann_1_1Neuron_1e08f02385e9b8fc0b927fc28fcfda966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Neuron::~Neuron()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//~Neuron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classpann_1_1Neuron_12ec7496a4939390cc4e9c2b1b4ebfd8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_12ec7496a4939390cc4e9c2b1b4ebfd8a" kindref="member">Neuron::setOwnerThread</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>_thread)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>&gt;<sp/>_thread<sp/>||<sp/>_thread<sp/>&gt;<sp/>100)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1RangeMismatch" kindref="compound" tooltip="Argument out of range.">Exception::RangeMismatch</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;Neuron::setOwnerThread():<sp/>thread<sp/>must<sp/>be<sp/>between<sp/>0<sp/>and<sp/>100\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_1b22b8940b68c650c5c11c2ee9ea777a1" kindref="member">ownerThread</ref><sp/>=_thread;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//setOwnerThread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classpann_1_1Neuron_12a426e05cdb3fbd67635a4ba57ec2bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_12a426e05cdb3fbd67635a4ba57ec2bbd" kindref="member">Neuron::getOwnerThread</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="32"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Neuron_1b22b8940b68c650c5c11c2ee9ea777a1" kindref="member">ownerThread</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//getOwnerThread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">ActivationFunction::Base</ref>*</highlight></codeline>
<codeline lineno="37" refid="classpann_1_1Neuron_120445c905a8ad3e243e0945bd3595b9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_120445c905a8ad3e243e0945bd3595b9a" kindref="member">Neuron::getActivationFunction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Neuron_1bd0230c56464055cc2dcae4da86c5f73" kindref="member">activationFunction</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//getOwnerThread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Link&gt;::iterator</highlight></codeline>
<codeline lineno="43" refid="classpann_1_1Neuron_1c38530608054d8bdb17d930a72b362bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Neuron_1c38530608054d8bdb17d930a72b362bd" kindref="member">Neuron::findLink</ref>(<ref refid="classpann_1_1Neuron" kindref="compound">Neuron</ref>*<sp/>_to,<sp/><ref refid="classpann_1_1Link_1843c5a79ffd161b67e1770f65eabf055" kindref="member">Link::Direction</ref><sp/>_direction)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;Link&gt;::iterator<sp/>result<sp/>=<sp/><ref refid="classpann_1_1Neuron_11ea45590be4c55659a776ff0acf2ac2c" kindref="member" tooltip="List of Link, both directions.">links</ref>.end();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;Link&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="classpann_1_1Neuron_11ea45590be4c55659a776ff0acf2ac2c" kindref="member" tooltip="List of Link, both directions.">links</ref>.begin();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>iter<sp/>!=<sp/><ref refid="classpann_1_1Neuron_11ea45590be4c55659a776ff0acf2ac2c" kindref="member" tooltip="List of Link, both directions.">links</ref>.end();<sp/>++iter)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter-&gt;getTo()<sp/>==<sp/>_to<sp/>&amp;&amp;<sp/>iter-&gt;getDirection()<sp/>==<sp/>_direction)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/><ref refid="classpann_1_1Neuron_11ea45590be4c55659a776ff0acf2ac2c" kindref="member" tooltip="List of Link, both directions.">links</ref>.end())<sp/></highlight><highlight class="comment">//Multiple<sp/>parallel<sp/>links<sp/>exist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1MultipleOccurance" kindref="compound" tooltip="Multiple elements exist, but onlyone allowed; ex: parallel links between neurons...">Exception::MultipleOccurance</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;findLink():<sp/>detected<sp/>parallel<sp/>links\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>iter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>==<sp/><ref refid="classpann_1_1Neuron_11ea45590be4c55659a776ff0acf2ac2c" kindref="member" tooltip="List of Link, both directions.">links</ref>.end())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1ObjectNotFound" kindref="compound" tooltip="Reference to unexistent object was requested.">Exception::ObjectNotFound</ref>()&lt;&lt;</highlight><highlight class="stringliteral">&quot;findLink():<sp/>can&apos;t<sp/>find<sp/>required<sp/>link\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//findLink</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">};<sp/></highlight><highlight class="comment">//pann</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/pann/Core/Neuron.cpp"/>
  </compounddef>
</doxygen>
