<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="Exception_8h" kind="file">
    <compoundname>Exception.h</compoundname>
    <includes refid="Includes_8h" local="yes">Includes.h</includes>
    <includedby refid="ActivationFunction_8h" local="yes">pann/trunk/src/pann/Core/ActivationFunction.h</includedby>
    <includedby refid="Attributes_8h" local="yes">pann/trunk/src/pann/Core/Attributes.h</includedby>
    <includedby refid="Exception_8cpp" local="yes">pann/trunk/src/pann/Core/Exception.cpp</includedby>
    <includedby refid="Storage_8h" local="yes">pann/trunk/src/pann/Core/Storage.h</includedby>
    <includedby refid="TrainPattern_8h" local="yes">pann/trunk/src/pann/TrainData/TrainPattern.h</includedby>
    <incdepgraph>
      <node id="3079">
        <label>list</label>
      </node>
      <node id="3081">
        <label>valarray</label>
      </node>
      <node id="3102">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="3085">
        <label>limits</label>
      </node>
      <node id="3104">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="3093">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="3084">
        <label>iterator</label>
      </node>
      <node id="3072">
        <label>pann/trunk/src/pann/Core/Exception.h</label>
        <link refid="Exception.h"/>
        <childnode refid="3073" relation="include">
        </childnode>
      </node>
      <node id="3089">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="3086">
        <label>cmath</label>
      </node>
      <node id="3094">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="3082">
        <label>string</label>
      </node>
      <node id="3078">
        <label>map</label>
      </node>
      <node id="3091">
        <label>boost/thread.hpp</label>
      </node>
      <node id="3100">
        <label>boost/serialization/tracking.hpp</label>
      </node>
      <node id="3074">
        <label>exception</label>
      </node>
      <node id="3077">
        <label>fstream</label>
      </node>
      <node id="3101">
        <label>boost/serialization/export.hpp</label>
      </node>
      <node id="3098">
        <label>boost/serialization/base_object.hpp</label>
      </node>
      <node id="3088">
        <label>boost/any.hpp</label>
      </node>
      <node id="3095">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="3099">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="3090">
        <label>boost/progress.hpp</label>
      </node>
      <node id="3073">
        <label>Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="3074" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
        <childnode refid="3081" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3088" relation="include">
        </childnode>
        <childnode refid="3089" relation="include">
        </childnode>
        <childnode refid="3090" relation="include">
        </childnode>
        <childnode refid="3091" relation="include">
        </childnode>
        <childnode refid="3092" relation="include">
        </childnode>
        <childnode refid="3093" relation="include">
        </childnode>
        <childnode refid="3094" relation="include">
        </childnode>
        <childnode refid="3095" relation="include">
        </childnode>
        <childnode refid="3096" relation="include">
        </childnode>
        <childnode refid="3097" relation="include">
        </childnode>
        <childnode refid="3098" relation="include">
        </childnode>
        <childnode refid="3099" relation="include">
        </childnode>
        <childnode refid="3100" relation="include">
        </childnode>
        <childnode refid="3101" relation="include">
        </childnode>
        <childnode refid="3102" relation="include">
        </childnode>
        <childnode refid="3103" relation="include">
        </childnode>
        <childnode refid="3104" relation="include">
        </childnode>
      </node>
      <node id="3080">
        <label>vector</label>
      </node>
      <node id="3092">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="3076">
        <label>sstream</label>
      </node>
      <node id="3087">
        <label>cstdlib</label>
      </node>
      <node id="3075">
        <label>iostream</label>
      </node>
      <node id="3103">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="3096">
        <label>boost/serialization/nvp.hpp</label>
      </node>
      <node id="3097">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="3083">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3109">
        <label>pann/trunk/src/pann/Core/Net.h</label>
        <link refid="Net_8h"/>
        <childnode refid="3110" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3111">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms/LmsAlgorithm.h</label>
        <link refid="LmsAlgorithm_8h"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3113" relation="include">
        </childnode>
      </node>
      <node id="3121">
        <label>pann/trunk/src/Utils/pann_viewer/glwidget.cpp</label>
        <link refid="glwidget_8cpp"/>
      </node>
      <node id="3137">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms/LmsAttributes.h</label>
        <link refid="LmsAttributes_8h"/>
        <childnode refid="3131" relation="include">
        </childnode>
      </node>
      <node id="3117">
        <label>pann/trunk/src/pann/pann.h</label>
        <link refid="pann_8h"/>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
      </node>
      <node id="3142">
        <label>pann/trunk/src/pann/TrainData/TrainPattern.cpp</label>
        <link refid="TrainPattern_8cpp"/>
      </node>
      <node id="3105">
        <label>pann/trunk/src/pann/Core/Exception.h</label>
        <link refid="Exception.h"/>
        <childnode refid="3106" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3139" relation="include">
        </childnode>
      </node>
      <node id="3112">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms/LmsAlgorithm.cpp</label>
        <link refid="LmsAlgorithm_8cpp"/>
      </node>
      <node id="3124">
        <label>pann/trunk/src/Utils/pann_viewer/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
      <node id="3127">
        <label>pann/trunk/src/pann/Core/NetCache.h</label>
        <link refid="NetCache_8h"/>
        <childnode refid="3109" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
      </node>
      <node id="3141">
        <label>pann/trunk/src/pann/TrainData/TrainData.cpp</label>
        <link refid="TrainData_8cpp"/>
      </node>
      <node id="3125">
        <label>pann/trunk/src/pann/NetworkModels/MultilayerPerceptron.h</label>
        <link refid="MultilayerPerceptron_8h"/>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3110">
        <label>pann/trunk/src/pann/Core/LearningAlgorithm.h</label>
        <link refid="LearningAlgorithm_8h"/>
        <childnode refid="3111" relation="include">
        </childnode>
      </node>
      <node id="3115">
        <label>pann/trunk/src/pann/Core/Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3138">
        <label>pann/trunk/src/pann/Core/Exception.cpp</label>
        <link refid="Exception_8cpp"/>
      </node>
      <node id="3132">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms/LmsRunner.cpp</label>
        <link refid="LmsRunner_8cpp"/>
      </node>
      <node id="3106">
        <label>pann/trunk/src/pann/Core/ActivationFunction.h</label>
        <link refid="ActivationFunction_8h"/>
        <childnode refid="3107" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3139">
        <label>pann/trunk/src/pann/TrainData/TrainPattern.h</label>
        <link refid="TrainPattern_8h"/>
        <childnode refid="3140" relation="include">
        </childnode>
        <childnode refid="3142" relation="include">
        </childnode>
      </node>
      <node id="3130">
        <label>pann/trunk/src/pann/Core/Runner.cpp</label>
        <link refid="Runner_8cpp"/>
      </node>
      <node id="3136">
        <label>pann/trunk/src/pann/Core/OpenGlHint.h</label>
        <link refid="OpenGlHint_8h"/>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3135">
        <label>pann/trunk/src/pann/Core/Attributes.cpp</label>
        <link refid="Attributes_8cpp"/>
      </node>
      <node id="3122">
        <label>pann/trunk/src/Utils/pann_viewer/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>pann/trunk/src/pann/Core/Runner.h</label>
        <link refid="Runner_8h"/>
        <childnode refid="3109" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
      </node>
      <node id="3140">
        <label>pann/trunk/src/pann/TrainData/TrainData.h</label>
        <link refid="TrainData_8h"/>
        <childnode refid="3110" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3141" relation="include">
        </childnode>
      </node>
      <node id="3128">
        <label>pann/trunk/src/pann/Core/NetCache.cpp</label>
        <link refid="NetCache_8cpp"/>
      </node>
      <node id="3134">
        <label>pann/trunk/src/pann/Core/Attributes.h</label>
        <link refid="Attributes_8h"/>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3109" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3137" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms/LmsRunner.h</label>
        <link refid="LmsRunner_8h"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>pann/trunk/src/pann/Core/Storage.cpp</label>
        <link refid="Storage_8cpp"/>
      </node>
      <node id="3123">
        <label>pann/trunk/src/Utils/pann_viewer/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="3133">
        <label>pann/trunk/src/pann/Core/Neuron.cpp</label>
        <link refid="Neuron_8cpp"/>
      </node>
      <node id="3108">
        <label>pann/trunk/src/pann/Core/Neuron.h</label>
        <link refid="Neuron_8h"/>
        <childnode refid="3109" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>pann/trunk/src/pann/Core/Net.cpp</label>
        <link refid="Net_8cpp"/>
      </node>
      <node id="3113">
        <label>pann/trunk/src/pann/LearningAlgorithms/Lms.h</label>
        <link refid="Lms_8h"/>
      </node>
      <node id="3126">
        <label>pann/trunk/src/pann/NetworkModels/MultilayerPerceptron.cpp</label>
        <link refid="MultilayerPerceptron_8cpp"/>
      </node>
      <node id="3119">
        <label>pann/trunk/src/UnitTests/TestNet.cpp</label>
        <link refid="TestNet_8cpp"/>
      </node>
      <node id="3120">
        <label>pann/trunk/src/Utils/pann_viewer/glwidget.h</label>
        <link refid="glwidget_8h"/>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>pann/trunk/src/UnitTests/TestLms.cpp</label>
        <link refid="TestLms_8cpp"/>
      </node>
      <node id="3107">
        <label>pann/trunk/src/pann/Core/ActivationFunction.cpp</label>
        <link refid="ActivationFunction_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classpann_1_1Exception_1_1Base" prot="public">pann::Exception::Base</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1Warning" prot="public">pann::Exception::Warning</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1ObjectNotFound" prot="public">pann::Exception::ObjectNotFound</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1ElementExists" prot="public">pann::Exception::ElementExists</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1MultipleOccurance" prot="public">pann::Exception::MultipleOccurance</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1SizeMismatch" prot="public">pann::Exception::SizeMismatch</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1RangeMismatch" prot="public">pann::Exception::RangeMismatch</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1NotReady" prot="public">pann::Exception::NotReady</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1FilesystemError" prot="public">pann::Exception::FilesystemError</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1Unbelievable" prot="public">pann::Exception::Unbelievable</innerclass>
    <innernamespace refid="namespacepann">pann</innernamespace>
    <innernamespace refid="namespacepann_1_1Exception">pann::Exception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines and implements all exception related stuff </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>EXCEPTION_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EXCEPTION_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Includes_8h" kindref="compound">Includes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pann</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Exception</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20" refid="namespacepann_1_1Exception_14b0dd33bc7fedcb69df051d8fcc1142d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="namespacepann_1_1Exception_14b0dd33bc7fedcb69df051d8fcc1142d" kindref="member">operator&lt;&lt;</ref>(E<sp/>&amp;<sp/>_e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>_value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_e.textStream<sp/>&lt;&lt;<sp/>_value;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_e;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classpann_1_1Exception_1_1Base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>()<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base_10ae22e27956edb603976595cda354b7b" kindref="member">~Base</ref>()<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classpann_1_1Exception_1_1Base_1814afcfe425f55f02e39f1fea05bcbe9" kindref="member">what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classpann_1_1Exception_1_1Base_13795b9ad6996ac80e80e4e8179b733ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="classpann_1_1Exception_1_1Base_13795b9ad6996ac80e80e4e8179b733ab" kindref="member">textStream</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classpann_1_1Exception_1_1Base_1bb7155278e12a8f39270a1fccc505059" kindref="member">operator&lt;&lt;</ref>(E<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>_value)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classpann_1_1Exception_1_1Warning" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1Warning" kindref="compound" tooltip="Not critical. Simply instantiate.">Warning</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classpann_1_1Exception_1_1Warning_1acd3290594a63cce83dfae974b0f00fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Warning_1acd3290594a63cce83dfae974b0f00fa" kindref="member">Warning</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="49" refid="classpann_1_1Exception_1_1Warning_1a0ded074204dafb83ec586b23151953e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Warning_1acd3290594a63cce83dfae974b0f00fa" kindref="member">Warning</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Warning" kindref="compound" tooltip="Not critical. Simply instantiate.">Warning</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="50" refid="classpann_1_1Exception_1_1Warning_141aa0289bbc946994bdc5c2da647631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Warning_141aa0289bbc946994bdc5c2da647631f" kindref="member">~Warning</ref>()<sp/>throw()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;<ref refid="classpann_1_1Exception_1_1Base_1814afcfe425f55f02e39f1fea05bcbe9" kindref="member">what</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classpann_1_1Exception_1_1ObjectNotFound" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1ObjectNotFound" kindref="compound" tooltip="Reference to unexistent object was requested.">ObjectNotFound</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classpann_1_1Exception_1_1ObjectNotFound_1ae4716a65995694f991a8d8fc8e1023f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1ObjectNotFound_1ae4716a65995694f991a8d8fc8e1023f" kindref="member">ObjectNotFound</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="61" refid="classpann_1_1Exception_1_1ObjectNotFound_12444ef1c2d6645fa0f7f8ba82950a0a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1ObjectNotFound_1ae4716a65995694f991a8d8fc8e1023f" kindref="member">ObjectNotFound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1ObjectNotFound" kindref="compound" tooltip="Reference to unexistent object was requested.">ObjectNotFound</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="62" refid="classpann_1_1Exception_1_1ObjectNotFound_18fb12c5f04599643af2f5ebb50390b72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1ObjectNotFound_18fb12c5f04599643af2f5ebb50390b72" kindref="member">~ObjectNotFound</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="classpann_1_1Exception_1_1ElementExists" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1ElementExists" kindref="compound" tooltip="Trying to add already existent element.">ElementExists</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69" refid="classpann_1_1Exception_1_1ElementExists_1332ff039b90661dbcb780d0443233c47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1ElementExists_1332ff039b90661dbcb780d0443233c47" kindref="member">ElementExists</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="70" refid="classpann_1_1Exception_1_1ElementExists_1939493ccb5270fd68aa388c999780f48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1ElementExists_1332ff039b90661dbcb780d0443233c47" kindref="member">ElementExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1ElementExists" kindref="compound" tooltip="Trying to add already existent element.">ElementExists</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="71" refid="classpann_1_1Exception_1_1ElementExists_13d3cb4626c8a84e95fa2afc981519564" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1ElementExists_13d3cb4626c8a84e95fa2afc981519564" kindref="member">~ElementExists</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classpann_1_1Exception_1_1MultipleOccurance" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1MultipleOccurance" kindref="compound" tooltip="Multiple elements exist, but onlyone allowed; ex: parallel links between neurons...">MultipleOccurance</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classpann_1_1Exception_1_1MultipleOccurance_145f25d33b1ceda0cc2c4de86951f7e9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1MultipleOccurance_145f25d33b1ceda0cc2c4de86951f7e9a" kindref="member">MultipleOccurance</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="79" refid="classpann_1_1Exception_1_1MultipleOccurance_13c713aeae985faafe524c7b8f422dc8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1MultipleOccurance_145f25d33b1ceda0cc2c4de86951f7e9a" kindref="member">MultipleOccurance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1MultipleOccurance" kindref="compound" tooltip="Multiple elements exist, but onlyone allowed; ex: parallel links between neurons...">MultipleOccurance</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="80" refid="classpann_1_1Exception_1_1MultipleOccurance_1d4efa512461e1d0f9520d3755afa3865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1MultipleOccurance_1d4efa512461e1d0f9520d3755afa3865" kindref="member">~MultipleOccurance</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classpann_1_1Exception_1_1SizeMismatch" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1SizeMismatch" kindref="compound" tooltip="Count of elements mismatch.">SizeMismatch</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classpann_1_1Exception_1_1SizeMismatch_1f3a7dd1ba8b6f3261a0ee9f7507539b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1SizeMismatch_1f3a7dd1ba8b6f3261a0ee9f7507539b9" kindref="member">SizeMismatch</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="88" refid="classpann_1_1Exception_1_1SizeMismatch_1d4dbe9e224ca25ad572105236efa1357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1SizeMismatch_1f3a7dd1ba8b6f3261a0ee9f7507539b9" kindref="member">SizeMismatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1SizeMismatch" kindref="compound" tooltip="Count of elements mismatch.">SizeMismatch</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="89" refid="classpann_1_1Exception_1_1SizeMismatch_16c5989fce1532aab570ffbd883860b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1SizeMismatch_16c5989fce1532aab570ffbd883860b7c" kindref="member">~SizeMismatch</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classpann_1_1Exception_1_1RangeMismatch" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1RangeMismatch" kindref="compound" tooltip="Argument out of range.">RangeMismatch</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96" refid="classpann_1_1Exception_1_1RangeMismatch_17eff1ff62a54ce4be6f4bae6dc330f47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1RangeMismatch_17eff1ff62a54ce4be6f4bae6dc330f47" kindref="member">RangeMismatch</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="97" refid="classpann_1_1Exception_1_1RangeMismatch_1e652e31cbcc3ba8f38ebf592f7eb6111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1RangeMismatch_17eff1ff62a54ce4be6f4bae6dc330f47" kindref="member">RangeMismatch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1RangeMismatch" kindref="compound" tooltip="Argument out of range.">RangeMismatch</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="98" refid="classpann_1_1Exception_1_1RangeMismatch_1b5288403f97579f5148a2fea19db73e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1RangeMismatch_1b5288403f97579f5148a2fea19db73e3" kindref="member">~RangeMismatch</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classpann_1_1Exception_1_1NotReady" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1NotReady" kindref="compound" tooltip="Requested not computed value.">NotReady</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105" refid="classpann_1_1Exception_1_1NotReady_156c3280400906b6da2dac838140e6d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1NotReady_156c3280400906b6da2dac838140e6d8a" kindref="member">NotReady</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="106" refid="classpann_1_1Exception_1_1NotReady_1a11f10867e72293f1acccfddfb874a4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1NotReady_156c3280400906b6da2dac838140e6d8a" kindref="member">NotReady</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1NotReady" kindref="compound" tooltip="Requested not computed value.">NotReady</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="107" refid="classpann_1_1Exception_1_1NotReady_1cc52799828ca550aaef1420ea852e3b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1NotReady_1cc52799828ca550aaef1420ea852e3b1" kindref="member">~NotReady</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classpann_1_1Exception_1_1FilesystemError" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1FilesystemError" kindref="compound" tooltip="Exceptionfor raising on filesystem failures (missing file etc.).">FilesystemError</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114" refid="classpann_1_1Exception_1_1FilesystemError_1efbd2f79ca600f1846c9241784448855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1FilesystemError_1efbd2f79ca600f1846c9241784448855" kindref="member">FilesystemError</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="115" refid="classpann_1_1Exception_1_1FilesystemError_10093755faf4e808668a588ea8ad1360f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1FilesystemError_1efbd2f79ca600f1846c9241784448855" kindref="member">FilesystemError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1FilesystemError" kindref="compound" tooltip="Exceptionfor raising on filesystem failures (missing file etc.).">FilesystemError</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="116" refid="classpann_1_1Exception_1_1FilesystemError_1de1ce500722821be1a9c1e1bb6bd43a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1FilesystemError_1de1ce500722821be1a9c1e1bb6bd43a8" kindref="member">~FilesystemError</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classpann_1_1Exception_1_1Unbelievable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1Exception_1_1Unbelievable" kindref="compound" tooltip="It&amp;#39;s imposible in our universe!">Unbelievable</ref><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123" refid="classpann_1_1Exception_1_1Unbelievable_156c7a3c75b1ad9259083ce9cd2f68c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Unbelievable_156c7a3c75b1ad9259083ce9cd2f68c22" kindref="member">Unbelievable</ref>()<sp/>throw()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base" kindref="compound" tooltip="Basic class for every exception.">Base</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="124" refid="classpann_1_1Exception_1_1Unbelievable_1798ff50f2beb3f1993125efd2bb8f339" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Exception_1_1Unbelievable_156c7a3c75b1ad9259083ce9cd2f68c22" kindref="member">Unbelievable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Unbelievable" kindref="compound" tooltip="It&amp;#39;s imposible in our universe!">Unbelievable</ref>&amp;<sp/>_rvalue)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/><ref refid="classpann_1_1Exception_1_1Base_129e2607d6a8c7dc15ed6ed3cb92d3ece" kindref="member">Base</ref>(_rvalue)<sp/>{};</highlight></codeline>
<codeline lineno="125" refid="classpann_1_1Exception_1_1Unbelievable_12d7c29b7849bb5b0aa0de7749b38fc9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Exception_1_1Unbelievable_12d7c29b7849bb5b0aa0de7749b38fc9d" kindref="member">~Unbelievable</ref>()<sp/>throw()<sp/>{};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//Exception</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">};<sp/></highlight><highlight class="comment">//pann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/pann/Core/Exception.h"/>
  </compounddef>
</doxygen>
