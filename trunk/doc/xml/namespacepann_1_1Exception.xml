<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="namespacepann_1_1Exception" kind="namespace">
    <compoundname>pann::Exception</compoundname>
    <innerclass refid="classpann_1_1Exception_1_1Base" prot="public">pann::Exception::Base</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1ObjectNotFound" prot="public">pann::Exception::ObjectNotFound</innerclass>
    <innerclass refid="classpann_1_1Exception_1_1ElementExists" prot="public">pann::Exception::ElementExists</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Use case: throw Exception::CoolException()&lt;&lt;&quot;This is exception; i = &quot;&lt;&lt;5&lt;&lt;std::endl; Don&apos;t forget to declare your CoolException, derived from <ref refid="classpann_1_1Exception_1_1Base" kindref="compound">Exception::Base</ref> </para>    </detaileddescription>
    <location file="/home/booble/pann/trunk/src/Exception.h" line="18"/>
  </compounddef>
</doxygen>
