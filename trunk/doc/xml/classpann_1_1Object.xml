<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="classpann_1_1Object" kind="class" prot="public">
    <compoundname>pann::Object</compoundname>
    <derivedcompoundref refid="classpann_1_1Cache" prot="public" virt="non-virtual">pann::Cache</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1Link" prot="public" virt="non-virtual">pann::Link</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1Net" prot="public" virt="non-virtual">pann::Net</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1Neuron" prot="public" virt="non-virtual">pann::Neuron</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1TrainData" prot="public" virt="non-virtual">pann::TrainData</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1TrainPattern" prot="public" virt="non-virtual">pann::TrainPattern</derivedcompoundref>
    <derivedcompoundref refid="classpann_1_1Weight" prot="public" virt="non-virtual">pann::Weight</derivedcompoundref>
    <includes refid="Object_8h" local="no">Object.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpann_1_1Object_17eff990bb1cc771117099f8cdcd6dd33" prot="protected" static="no" mutable="yes">
        <type>std::map&lt; std::string, boost::any &gt;</type>
        <definition>std::map&lt;std::string, boost::any&gt; pann::Object::attributes</definition>
        <argsstring></argsstring>
        <name>attributes</name>
        <briefdescription>
<para>left - name, right - parametr </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="19" bodyfile="/home/booble/pann/trunk/src/Core/Object.h" bodystart="19" bodyend="-1"/>
        <referencedby refid="classpann_1_1Object_11129a3588cfdab22f8e0562d4a2a03c6" compoundref="Object_8cpp" startline="53" endline="56">erase</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classpann_1_1Object_1a6c82ac98a12d54126d50256084ca731" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned pann::Object::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="20" bodyfile="/home/booble/pann/trunk/src/Core/Object.h" bodystart="20" bodyend="-1"/>
        <referencedby refid="classpann_1_1Object_1fd57145143abda778d92836b1d1e4471" compoundref="Object_8cpp" startline="25" endline="28">getId</referencedby>
        <referencedby refid="classpann_1_1Net_1a54ff5e1cbb26acaab7a2035f6719169" compoundref="Net_8h" startline="300" endline="389">pann::Net::load</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpann_1_1Object_1c98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class boost::serialization::access</definition>
        <argsstring></argsstring>
        <name>boost::serialization::access</name>
        <reimplementedby refid="classpann_1_1Weight_1c98d07dd8f7b70e16ccb9a01abf56b9c">boost::serialization::access</reimplementedby>
        <reimplementedby refid="classpann_1_1Neuron_1c98d07dd8f7b70e16ccb9a01abf56b9c">boost::serialization::access</reimplementedby>
        <reimplementedby refid="classpann_1_1Net_1c98d07dd8f7b70e16ccb9a01abf56b9c">boost::serialization::access</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="48" bodyfile="/home/booble/pann/trunk/src/Core/Object.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpann_1_1Object_1c7977c476f6c5a8929e6c90550ed0a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pann::Object::Object</definition>
        <argsstring>(unsigned _id=0)</argsstring>
        <name>Object</name>
        <param>
          <type>unsigned</type>
          <declname>_id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="23" bodyfile="/home/booble/pann/trunk/src/Core/Object.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_1461126af2f1a20fa24f1340f670c5733" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>pann::Object::~Object</definition>
        <argsstring>()</argsstring>
        <name>~Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="24" bodyfile="/home/booble/pann/trunk/src/Core/Object.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_1fd57145143abda778d92836b1d1e4471" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned pann::Object::getId</definition>
        <argsstring>()</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="26" bodyfile="/home/booble/pann/trunk/src/Core/Object.cpp" bodystart="25" bodyend="28"/>
        <references refid="classpann_1_1Object_1a6c82ac98a12d54126d50256084ca731" compoundref="Object_8h" startline="20">id</references>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_11636c5461bf78692e9f65d1b07ac0e7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pann::Object::is</definition>
        <argsstring>(const std::string &amp;_attributeName) const </argsstring>
        <name>is</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_attributeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does attribute exist? <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_attributeName</parametername>
</parameternamelist>
<parameterdescription>
<para>- checking attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="30"/>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_18fa5d473b8b12627957d3cdec5fdfce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pann::Object::unset</definition>
        <argsstring>(const std::string &amp;_attributeName)</argsstring>
        <name>unset</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_attributeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete attribute <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_attributeName</parametername>
</parameternamelist>
<parameterdescription>
<para>- deleting attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="34"/>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_144586c162aeb57fcf019e7cb4ffa63fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::any &amp;</type>
        <definition>boost::any&amp; pann::Object::operator[]</definition>
        <argsstring>(const std::string &amp;_attributeName)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_attributeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get reference to attribute. Create it if nonexistent <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_attributeName</parametername>
</parameternamelist>
<parameterdescription>
<para>- getting attribute name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>- reference to attribute </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_11129a3588cfdab22f8e0562d4a2a03c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pann::Object::erase</definition>
        <argsstring>()</argsstring>
        <name>erase</name>
        <briefdescription>
<para>Delete all attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="42" bodyfile="/home/booble/pann/trunk/src/Core/Object.cpp" bodystart="53" bodyend="56"/>
        <references refid="classpann_1_1Object_17eff990bb1cc771117099f8cdcd6dd33" compoundref="Object_8h" startline="19">attributes</references>
      </memberdef>
      <memberdef kind="function" id="classpann_1_1Object_1f0039bd3a5cdbb3decfa5e33055e1a45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void pann::Object::printDebugInfo</definition>
        <argsstring>(std::ostringstream &amp;ost) const =0</argsstring>
        <name>printDebugInfo</name>
        <reimplementedby refid="classpann_1_1Weight_18d51519bd5723b61b32b687502aada06">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1TrainData_1fb88f4772bc657940d41c629ef121924">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1TrainPattern_1a4f1e7a2c806f9a03093c04788b1d21a">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1Neuron_10017d9230fca2359b460e9a18b8a8198">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1Net_1ec0809d7cb83ea29f7f36492609a2de9">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1Link_11b0611d84a5fd7632fdaffac2b19b2a9">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1NetCache_1f776078aecabf7258b807d4d0249241a">printDebugInfo</reimplementedby>
        <reimplementedby refid="classpann_1_1Cache_16a3932a817f186bb9c73e6821608f87f">printDebugInfo</reimplementedby>
        <param>
          <type>std::ostringstream &amp;</type>
          <declname>ost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpann_1_1Object_113a234c0fcd5d32d341353f1b7b3c828" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
            <declname>Archive</declname>
            <defname>Archive</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pann::Object::serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int version)</argsstring>
        <name>serialize</name>
        <reimplementedby refid="classpann_1_1Weight_1ddeecbb0805615aa2ee5c20f7268e577">serialize</reimplementedby>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/booble/pann/trunk/src/Core/Object.h" line="51" bodyfile="/home/booble/pann/trunk/src/Core/Object.h" bodystart="50" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for almoust everything. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="123">
        <label>pann::Neuron</label>
        <link refid="classpann_1_1Neuron"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>pann::Object</label>
        <link refid="classpann_1_1Object"/>
      </node>
      <node id="121">
        <label>pann::Link</label>
        <link refid="classpann_1_1Link"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>pann::TrainData</label>
        <link refid="classpann_1_1TrainData"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>pann::NetCache</label>
        <link refid="classpann_1_1NetCache"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>pann::Weight</label>
        <link refid="classpann_1_1Weight"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>pann::Net</label>
        <link refid="classpann_1_1Net"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>pann::Cache</label>
        <link refid="classpann_1_1Cache"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>pann::TrainPattern</label>
        <link refid="classpann_1_1TrainPattern"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/booble/pann/trunk/src/Core/Object.h" line="17" bodyfile="/home/booble/pann/trunk/src/Core/Object.h" bodystart="16" bodyend="55"/>
    <listofallmembers>
      <member refid="classpann_1_1Object_17eff990bb1cc771117099f8cdcd6dd33" prot="protected" virt="non-virtual"><scope>pann::Object</scope><name>attributes</name></member>
      <member refid="classpann_1_1Object_1c98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>boost::serialization::access</name></member>
      <member refid="classpann_1_1Object_11129a3588cfdab22f8e0562d4a2a03c6" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>erase</name></member>
      <member refid="classpann_1_1Object_1fd57145143abda778d92836b1d1e4471" prot="public" virt="virtual"><scope>pann::Object</scope><name>getId</name></member>
      <member refid="classpann_1_1Object_1a6c82ac98a12d54126d50256084ca731" prot="protected" virt="non-virtual"><scope>pann::Object</scope><name>id</name></member>
      <member refid="classpann_1_1Object_11636c5461bf78692e9f65d1b07ac0e7c" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>is</name></member>
      <member refid="classpann_1_1Object_1c7977c476f6c5a8929e6c90550ed0a25" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>Object</name></member>
      <member refid="classpann_1_1Object_144586c162aeb57fcf019e7cb4ffa63fd" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>operator[]</name></member>
      <member refid="classpann_1_1Object_1f0039bd3a5cdbb3decfa5e33055e1a45" prot="public" virt="pure-virtual"><scope>pann::Object</scope><name>printDebugInfo</name></member>
      <member refid="classpann_1_1Object_113a234c0fcd5d32d341353f1b7b3c828" prot="private" virt="non-virtual"><scope>pann::Object</scope><name>serialize</name></member>
      <member refid="classpann_1_1Object_18fa5d473b8b12627957d3cdec5fdfce0" prot="public" virt="non-virtual"><scope>pann::Object</scope><name>unset</name></member>
      <member refid="classpann_1_1Object_1461126af2f1a20fa24f1340f670c5733" prot="public" virt="virtual"><scope>pann::Object</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
