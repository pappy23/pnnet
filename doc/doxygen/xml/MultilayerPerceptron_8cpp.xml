<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="MultilayerPerceptron_8cpp" kind="file">
    <compoundname>MultilayerPerceptron.cpp</compoundname>
    <includes refid="MultilayerPerceptron_8h" local="yes">MultilayerPerceptron.h</includes>
    <incdepgraph>
      <node id="4620">
        <label>list</label>
      </node>
      <node id="4649">
        <label>Core/Net.h</label>
        <link refid="Net_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
        <childnode refid="4651" relation="include">
        </childnode>
        <childnode refid="4652" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
      </node>
      <node id="4622">
        <label>valarray</label>
      </node>
      <node id="4643">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="4626">
        <label>limits</label>
      </node>
      <node id="4645">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="4634">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="4625">
        <label>iterator</label>
      </node>
      <node id="4648">
        <label>Exception.h</label>
        <link refid="Exception_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
      </node>
      <node id="4655">
        <label>NetCache.h</label>
        <link refid="NetCache_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4652" relation="include">
        </childnode>
      </node>
      <node id="4630">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="4627">
        <label>cmath</label>
      </node>
      <node id="4613">
        <label>MultilayerPerceptron.h</label>
        <link refid="MultilayerPerceptron_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4646" relation="include">
        </childnode>
        <childnode refid="4649" relation="include">
        </childnode>
      </node>
      <node id="4635">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="4623">
        <label>string</label>
      </node>
      <node id="4619">
        <label>map</label>
      </node>
      <node id="4632">
        <label>boost/thread.hpp</label>
      </node>
      <node id="4646">
        <label>Core/ActivationFunction.h</label>
        <link refid="ActivationFunction_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4648" relation="include">
        </childnode>
      </node>
      <node id="4641">
        <label>boost/serialization/tracking.hpp</label>
      </node>
      <node id="4615">
        <label>exception</label>
      </node>
      <node id="4618">
        <label>fstream</label>
      </node>
      <node id="4642">
        <label>boost/serialization/export.hpp</label>
      </node>
      <node id="4639">
        <label>boost/serialization/base_object.hpp</label>
      </node>
      <node id="4629">
        <label>boost/any.hpp</label>
      </node>
      <node id="4636">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="4640">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="4656">
        <label>Cache.h</label>
        <link refid="Cache_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
      </node>
      <node id="4631">
        <label>boost/progress.hpp</label>
      </node>
      <node id="4657">
        <label>Runner.h</label>
        <link refid="Runner_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4652" relation="include">
        </childnode>
      </node>
      <node id="4653">
        <label>Link.h</label>
        <link refid="Link_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
        <childnode refid="4654" relation="include">
        </childnode>
      </node>
      <node id="4654">
        <label>Weight.h</label>
        <link refid="Weight_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
      </node>
      <node id="4651">
        <label>Attributes.h</label>
        <link refid="Attributes_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4648" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
      </node>
      <node id="4614">
        <label>Core/Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="4615" relation="include">
        </childnode>
        <childnode refid="4616" relation="include">
        </childnode>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4619" relation="include">
        </childnode>
        <childnode refid="4620" relation="include">
        </childnode>
        <childnode refid="4621" relation="include">
        </childnode>
        <childnode refid="4622" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4624" relation="include">
        </childnode>
        <childnode refid="4625" relation="include">
        </childnode>
        <childnode refid="4626" relation="include">
        </childnode>
        <childnode refid="4627" relation="include">
        </childnode>
        <childnode refid="4628" relation="include">
        </childnode>
        <childnode refid="4629" relation="include">
        </childnode>
        <childnode refid="4630" relation="include">
        </childnode>
        <childnode refid="4631" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
        <childnode refid="4633" relation="include">
        </childnode>
        <childnode refid="4634" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
        <childnode refid="4636" relation="include">
        </childnode>
        <childnode refid="4637" relation="include">
        </childnode>
        <childnode refid="4638" relation="include">
        </childnode>
        <childnode refid="4639" relation="include">
        </childnode>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4641" relation="include">
        </childnode>
        <childnode refid="4642" relation="include">
        </childnode>
        <childnode refid="4643" relation="include">
        </childnode>
        <childnode refid="4644" relation="include">
        </childnode>
        <childnode refid="4645" relation="include">
        </childnode>
      </node>
      <node id="4621">
        <label>vector</label>
      </node>
      <node id="4633">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="4617">
        <label>sstream</label>
      </node>
      <node id="4647">
        <label>Type.h</label>
        <link refid="Type_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
      </node>
      <node id="4628">
        <label>cstdlib</label>
      </node>
      <node id="4616">
        <label>iostream</label>
      </node>
      <node id="4652">
        <label>Neuron.h</label>
        <link refid="Neuron_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
        <childnode refid="4646" relation="include">
        </childnode>
        <childnode refid="4653" relation="include">
        </childnode>
        <childnode refid="4651" relation="include">
        </childnode>
      </node>
      <node id="4644">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="4637">
        <label>boost/serialization/nvp.hpp</label>
      </node>
      <node id="4650">
        <label>Object.h</label>
        <link refid="Object_8h"/>
        <childnode refid="4614" relation="include">
        </childnode>
      </node>
      <node id="4612">
        <label>pann/trunk/src/pann/NetworkModels/MultilayerPerceptron.cpp</label>
        <link refid="MultilayerPerceptron.cpp"/>
        <childnode refid="4613" relation="include">
        </childnode>
      </node>
      <node id="4638">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="4624">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepann">pann</innernamespace>
    <innernamespace refid="namespacepann_1_1NetworkModel">pann::NetworkModel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//MultilayerPerceptron.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MultilayerPerceptron_8h" kindref="compound">MultilayerPerceptron.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pann</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9" refid="namespacepann_1_1NetworkModel" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">NetworkModel</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11" refid="namespacepann_1_1NetworkModel_188223ff4c4a04103fcaefa1d899a2b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>*<sp/><ref refid="namespacepann_1_1NetworkModel_188223ff4c4a04103fcaefa1d899a2b42" kindref="member">MultilayerPerceptron</ref>(vector&lt;unsigned&gt;<sp/>layers,<sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">ActivationFunction::Base</ref>*<sp/>af)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>threads<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>*<sp/>net<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>(0);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layers.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;<sp/>vector&lt;unsigned&gt;<sp/>&gt;<sp/>mlp(layers.size());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Input<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>layers[0];<sp/>++i)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mlp[0].push_back(net-&gt;<ref refid="classpann_1_1Net_110f0471ee473197380146330d2ee0977" kindref="member">addInputNeuron</ref>());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layers.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>OpenGlHint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>owner<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>1;<sp/>l<sp/>&lt;<sp/>layers.size();<sp/>++l)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>layers[l];<sp/>++i)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mlp[l].push_back(net-&gt;<ref refid="classpann_1_1Net_1875e333ddaaaf4d8cc332c4ff816c584" kindref="member">addNeuron</ref>(af));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_160ede07661fe666b8923c50da10e1cb2" kindref="member">setNeuronOwner</ref>(mlp[l][i],<sp/>owner);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>bias<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_15f793f0f9a0462093637d8d7b5fe7b0f" kindref="member">addConnection</ref>(net-&gt;<ref refid="classpann_1_1Net_1179bae99437bcfc80e3477a9c01e0d62" kindref="member">getBiasId</ref>(),<sp/>mlp[l][i],<sp/>1);<sp/></highlight><highlight class="comment">//TODO<sp/>rand()<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++owner<sp/>&gt;<sp/>threads)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mlp.size()<sp/>-<sp/>1;<sp/>i++)<sp/></highlight><highlight class="comment">//layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mlp[i].size();<sp/>j++)<sp/></highlight><highlight class="comment">//prev<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>mlp[i+1].size();<sp/>k++)<sp/></highlight><highlight class="comment">//next<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connection<sp/>from<sp/>current<sp/>layer<sp/>(i)<sp/>to<sp/>next<sp/>(i+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_15f793f0f9a0462093637d8d7b5fe7b0f" kindref="member">addConnection</ref>(mlp[i][j],<sp/>mlp[i+1][k],<sp/>1);<sp/></highlight><highlight class="comment">//TODO:<sp/>add<sp/>rand()<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">};<sp/></highlight><highlight class="comment">//pann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/pann/NetworkModels/MultilayerPerceptron.cpp"/>
  </compounddef>
</doxygen>
