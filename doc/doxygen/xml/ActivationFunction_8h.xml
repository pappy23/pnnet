<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="ActivationFunction_8h" kind="file">
    <compoundname>ActivationFunction.h</compoundname>
    <includes refid="Includes_8h" local="yes">Includes.h</includes>
    <includes refid="Type_8h" local="yes">Type.h</includes>
    <includes refid="Exception_8h" local="yes">Exception.h</includes>
    <includedby refid="ActivationFunction_8cpp" local="yes">pann/trunk/src/Core/ActivationFunction.cpp</includedby>
    <includedby refid="Neuron_8h" local="yes">pann/trunk/src/Core/Neuron.h</includedby>
    <includedby refid="TestSerialization_8cpp" local="yes">pann/trunk/src/UnitTests/TestSerialization.cpp</includedby>
    <incdepgraph>
      <node id="1603">
        <label>list</label>
      </node>
      <node id="1627">
        <label>Exception.h</label>
        <link refid="Exception_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
      </node>
      <node id="1605">
        <label>valarray</label>
      </node>
      <node id="1597">
        <label>pann/trunk/src/Core/ActivationFunction.h</label>
        <link refid="ActivationFunction.h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1626" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1621">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="1609">
        <label>limits</label>
      </node>
      <node id="1623">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="1608">
        <label>iterator</label>
      </node>
      <node id="1620">
        <label>boost/archive/text_iarchive.hpp</label>
      </node>
      <node id="1626">
        <label>Type.h</label>
        <link refid="Type_8h"/>
        <childnode refid="1598" relation="include">
        </childnode>
      </node>
      <node id="1613">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="1610">
        <label>cmath</label>
      </node>
      <node id="1617">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="1606">
        <label>string</label>
      </node>
      <node id="1602">
        <label>map</label>
      </node>
      <node id="1614">
        <label>boost/thread.hpp</label>
      </node>
      <node id="1601">
        <label>fstream</label>
      </node>
      <node id="1598">
        <label>Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1619" relation="include">
        </childnode>
        <childnode refid="1620" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
        <childnode refid="1622" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1625" relation="include">
        </childnode>
      </node>
      <node id="1612">
        <label>boost/any.hpp</label>
      </node>
      <node id="1619">
        <label>boost/archive/text_oarchive.hpp</label>
      </node>
      <node id="1618">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="1624">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="1625">
        <label>boost/progress.hpp</label>
      </node>
      <node id="1604">
        <label>vector</label>
      </node>
      <node id="1615">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="1600">
        <label>sstream</label>
      </node>
      <node id="1616">
        <label>boost/ref.hpp</label>
      </node>
      <node id="1611">
        <label>cstdlib</label>
      </node>
      <node id="1599">
        <label>iostream</label>
      </node>
      <node id="1622">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="1607">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1635">
        <label>pann/trunk/src/Core/MultilayerPerceptron.cpp</label>
        <link refid="MultilayerPerceptron_8cpp"/>
      </node>
      <node id="1641">
        <label>pann/trunk/src/Utils/pann_viewer/glwidget.cpp</label>
        <link refid="glwidget_8cpp"/>
      </node>
      <node id="1628">
        <label>pann/trunk/src/Core/ActivationFunction.h</label>
        <link refid="ActivationFunction.h"/>
        <childnode refid="1629" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1647" relation="include">
        </childnode>
      </node>
      <node id="1643">
        <label>pann/trunk/src/Utils/pann_viewer/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
      <node id="1637">
        <label>pann/trunk/src/Core/Net.cpp</label>
        <link refid="Net_8cpp"/>
      </node>
      <node id="1645">
        <label>pann/trunk/src/Core/Runner.cpp</label>
        <link refid="Runner_8cpp"/>
      </node>
      <node id="1631">
        <label>pann/trunk/src/Core/Net.h</label>
        <link refid="Net_8h"/>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1633" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
        <childnode refid="1637" relation="include">
        </childnode>
        <childnode refid="1638" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
        <childnode refid="1640" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
        <childnode refid="1639" relation="include">
        </childnode>
      </node>
      <node id="1630">
        <label>pann/trunk/src/Core/Neuron.h</label>
        <link refid="Neuron_8h"/>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1644" relation="include">
        </childnode>
        <childnode refid="1646" relation="include">
        </childnode>
      </node>
      <node id="1633">
        <label>pann/trunk/src/Core/LMS.h</label>
        <link refid="LMS_8h"/>
      </node>
      <node id="1642">
        <label>pann/trunk/src/Utils/pann_viewer/window.h</label>
        <link refid="window_8h"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
      </node>
      <node id="1632">
        <label>pann/trunk/src/Core/LearningAlgorithm.h</label>
        <link refid="LearningAlgorithm_8h"/>
        <childnode refid="1633" relation="include">
        </childnode>
      </node>
      <node id="1634">
        <label>pann/trunk/src/Core/NetworkModel.h</label>
        <link refid="NetworkModel_8h"/>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
      </node>
      <node id="1647">
        <label>pann/trunk/src/UnitTests/TestSerialization.cpp</label>
        <link refid="TestSerialization_8cpp"/>
      </node>
      <node id="1639">
        <label>pann/trunk/src/Utils/pann_viewer/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1646">
        <label>pann/trunk/src/Core/Neuron.cpp</label>
        <link refid="Neuron_8cpp"/>
      </node>
      <node id="1638">
        <label>pann/trunk/src/Core/Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="1636" relation="include">
        </childnode>
        <childnode refid="1639" relation="include">
        </childnode>
      </node>
      <node id="1629">
        <label>pann/trunk/src/Core/ActivationFunction.cpp</label>
        <link refid="ActivationFunction_8cpp"/>
      </node>
      <node id="1636">
        <label>pann/trunk/src/UnitTests/TestNet.cpp</label>
        <link refid="TestNet_8cpp"/>
      </node>
      <node id="1640">
        <label>pann/trunk/src/Utils/pann_viewer/glwidget.h</label>
        <link refid="glwidget_8h"/>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
      </node>
      <node id="1644">
        <label>pann/trunk/src/Core/Runner.h</label>
        <link refid="Runner_8h"/>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1645" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpann_1_1ActivationFunction_1_1Base" prot="public">pann::ActivationFunction::Base</innerclass>
    <innerclass refid="classpann_1_1ActivationFunction_1_1Linear" prot="public">pann::ActivationFunction::Linear</innerclass>
    <innerclass refid="classpann_1_1ActivationFunction_1_1Threshold" prot="public">pann::ActivationFunction::Threshold</innerclass>
    <innerclass refid="classpann_1_1ActivationFunction_1_1TanH" prot="public">pann::ActivationFunction::TanH</innerclass>
    <innernamespace refid="namespacepann">pann</innernamespace>
    <innernamespace refid="namespacepann_1_1ActivationFunction">pann::ActivationFunction</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Activation functions declarations </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>ACTIVATIONFUNCTION_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ACTIVATIONFUNCTION_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Includes_8h" kindref="compound">Includes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Type_8h" kindref="compound">Type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Exception_8h" kindref="compound">Exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pann</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ActivationFunction</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22" refid="classpann_1_1ActivationFunction_1_1Base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref><sp/></highlight><highlight class="comment">//Singleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Returns<sp/>reference<sp/>to<sp/>ActivationFunction<sp/>object.<sp/>It<sp/>is<sp/>always<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>one<sp/>object<sp/>of<sp/>class<sp/>Base<sp/>exist<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/><ref refid="classpann_1_1ActivationFunction_1_1Base_15bce1a2f357da69638b97f6d3ef73395" kindref="member">Instance</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base_1882ff77ecccf62b9c453243fe0adb63d" kindref="member">getId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classpann_1_1ActivationFunction_1_1Base_1110e8df25117878d2b49cc2fda35c50d" kindref="member">getName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base_16f8d64be53a32ddfe46abb3501849628" kindref="member">f</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base_1eb85eeb7e4058df1b5ca45ad15745ad8" kindref="member">derivative</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classpann_1_1ActivationFunction_1_1Linear" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1ActivationFunction_1_1Linear" kindref="compound">Linear</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classpann_1_1ActivationFunction_1_1Linear_1cea52657f802cdd1431e6a6a96602a28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classpann_1_1ActivationFunction_1_1Linear_1079ba5cd17eb672ba923aea2b8b7c3d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_1079ba5cd17eb672ba923aea2b8b7c3d3" kindref="member">Linear</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classpann_1_1ActivationFunction_1_1Linear_14c3ae3c29c9c9b3213356ca1846220e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_14c3ae3c29c9c9b3213356ca1846220e3" kindref="member">~Linear</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="classpann_1_1ActivationFunction_1_1Linear_187335208832a774ba10892b4cfe97d09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_187335208832a774ba10892b4cfe97d09" kindref="member">Instance</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_1079ba5cd17eb672ba923aea2b8b7c3d3" kindref="member">Linear</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classpann_1_1ActivationFunction_1_1Linear_1e9dfd60ec5f8a0cd6c17ef4404add5c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_1e9dfd60ec5f8a0cd6c17ef4404add5c4" kindref="member">getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>};</highlight></codeline>
<codeline lineno="66" refid="classpann_1_1ActivationFunction_1_1Linear_1789c99e6a5c5002af46b6a028fd17a74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_1789c99e6a5c5002af46b6a028fd17a74" kindref="member">getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Linear&quot;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classpann_1_1ActivationFunction_1_1Linear_17c10cdc08b0bbbb26b68a55c249da4c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_17c10cdc08b0bbbb26b68a55c249da4c7" kindref="member">f</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/>_x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_x;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classpann_1_1ActivationFunction_1_1Linear_1da93c5387a4f54d5a44ba57007382b14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Linear_1da93c5387a4f54d5a44ba57007382b14" kindref="member">derivative</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classpann_1_1ActivationFunction_1_1Threshold" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1ActivationFunction_1_1Threshold" kindref="compound">Threshold</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classpann_1_1ActivationFunction_1_1Threshold_13d4877deed0b1835b17b48303ac7aebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91" refid="classpann_1_1ActivationFunction_1_1Threshold_1dd8dd134551c6658d5f5875542555188" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_1dd8dd134551c6658d5f5875542555188" kindref="member">Threshold</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94" refid="classpann_1_1ActivationFunction_1_1Threshold_15b18d8698572d4e9a48fec210db6393a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_15b18d8698572d4e9a48fec210db6393a" kindref="member">~Threshold</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97" refid="classpann_1_1ActivationFunction_1_1Threshold_1a132088780dc2b151c7c0b5ae3850b0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_1a132088780dc2b151c7c0b5ae3850b0b" kindref="member">Instance</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_1dd8dd134551c6658d5f5875542555188" kindref="member">Threshold</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classpann_1_1ActivationFunction_1_1Threshold_1e3178b402d5bad3ff7d34355415a15b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_1e3178b402d5bad3ff7d34355415a15b9" kindref="member">getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;<sp/>};</highlight></codeline>
<codeline lineno="106" refid="classpann_1_1ActivationFunction_1_1Threshold_178703fca497f9efdb5f1760d3f50852d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_178703fca497f9efdb5f1760d3f50852d" kindref="member">getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Threshold&quot;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classpann_1_1ActivationFunction_1_1Threshold_1b5c50e74b8f93770f466274f1ebc0fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_1b5c50e74b8f93770f466274f1ebc0fb0" kindref="member">f</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/>_x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_x<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classpann_1_1ActivationFunction_1_1Threshold_19f7c90eff2ed5fdac54e28965350cc6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1Threshold_19f7c90eff2ed5fdac54e28965350cc6c" kindref="member">derivative</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/>_x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="116"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_x<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacepann_1681692849fa08fe4251447c25500d75c" kindref="member">inf</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classpann_1_1ActivationFunction_1_1TanH" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpann_1_1ActivationFunction_1_1TanH" kindref="compound">TanH</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131" refid="classpann_1_1ActivationFunction_1_1TanH_17dad50a0e249730be0f378180bfe4e21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134" refid="classpann_1_1ActivationFunction_1_1TanH_1c7e768b6f7fa190e08716a77a097dbd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1c7e768b6f7fa190e08716a77a097dbd1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="135" refid="classpann_1_1ActivationFunction_1_1TanH_1ad78b3bdbe04010bc7da87e4a748ddf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1ad78b3bdbe04010bc7da87e4a748ddf2" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138" refid="classpann_1_1ActivationFunction_1_1TanH_134e21fc187d57fcf395bf87b2337d187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_134e21fc187d57fcf395bf87b2337d187" kindref="member">TanH</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="classpann_1_1ActivationFunction_1_1TanH_1e00c1612c0d3778c0202e9f364de17fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1e00c1612c0d3778c0202e9f364de17fd" kindref="member">~TanH</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144" refid="classpann_1_1ActivationFunction_1_1TanH_1f0d5c84687ea2693631c44ee1e4448fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">Base</ref>*<sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1f0d5c84687ea2693631c44ee1e4448fd" kindref="member">Instance</ref>()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_134e21fc187d57fcf395bf87b2337d187" kindref="member">TanH</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classpann_1_1ActivationFunction_1_1TanH_1ad4c5d74bcba084a30a5dbf8103e60bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1ad4c5d74bcba084a30a5dbf8103e60bb" kindref="member">getId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>};</highlight></codeline>
<codeline lineno="153" refid="classpann_1_1ActivationFunction_1_1TanH_14cab8e9156979208d43bb42dbd3e2bef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_14cab8e9156979208d43bb42dbd3e2bef" kindref="member">getName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;TanH&quot;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classpann_1_1ActivationFunction_1_1TanH_155414f73736900fc25446ac7bbd66b81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_155414f73736900fc25446ac7bbd66b81" kindref="member">f</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/>_x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1c7e768b6f7fa190e08716a77a097dbd1" kindref="member">a</ref><sp/>*<sp/>std::tanh(<sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_1ad78b3bdbe04010bc7da87e4a748ddf2" kindref="member">b</ref><sp/>*<sp/>_x<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classpann_1_1ActivationFunction_1_1TanH_123cd96f9359967ea0c7bfe4b0ee09598" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref><sp/><ref refid="classpann_1_1ActivationFunction_1_1TanH_123cd96f9359967ea0c7bfe4b0ee09598" kindref="member">derivative</ref>(<ref refid="namespacepann_14509ba95a02d59e0a1cd5127e1c55988" kindref="member">Float</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>ADD<sp/>NEW<sp/>FUNCTIONS<sp/>TO<sp/>getById()</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Base*<sp/><ref refid="namespacepann_1_1ActivationFunction_12287da8b90c9142021227b425e5085f9" kindref="member">getById</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//ActivationFunctions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">};<sp/></highlight><highlight class="comment">//pann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//ACTIVATIONFUNCTION_H</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/Core/ActivationFunction.h"/>
  </compounddef>
</doxygen>
