<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.6">
  <compounddef id="MultilayerPerceptron_8cpp" kind="file">
    <compoundname>MultilayerPerceptron.cpp</compoundname>
    <includes refid="Includes_8h" local="yes">Includes.h</includes>
    <includes refid="NetworkModel_8h" local="yes">NetworkModel.h</includes>
    <incdepgraph>
      <node id="2008">
        <label>list</label>
      </node>
      <node id="2002">
        <label>pann/trunk/src/Core/MultilayerPerceptron.cpp</label>
        <link refid="MultilayerPerceptron.cpp"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2031" relation="include">
        </childnode>
      </node>
      <node id="2034">
        <label>Exception.h</label>
        <link refid="Exception_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
      </node>
      <node id="2010">
        <label>valarray</label>
      </node>
      <node id="2037">
        <label>ActivationFunction.h</label>
        <link refid="ActivationFunction_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
        <childnode refid="2034" relation="include">
        </childnode>
      </node>
      <node id="2026">
        <label>boost/serialization/map.hpp</label>
      </node>
      <node id="2014">
        <label>limits</label>
      </node>
      <node id="2028">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="2013">
        <label>iterator</label>
      </node>
      <node id="2025">
        <label>boost/archive/text_iarchive.hpp</label>
      </node>
      <node id="2041">
        <label>LearningHint.h</label>
        <link refid="LearningHint_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2034" relation="include">
        </childnode>
      </node>
      <node id="2035">
        <label>Type.h</label>
        <link refid="Type_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
      </node>
      <node id="2038">
        <label>Link.h</label>
        <link refid="Link_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
        <childnode refid="2039" relation="include">
        </childnode>
      </node>
      <node id="2040">
        <label>OpenGLHint.h</label>
        <link refid="OpenGLHint_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
      </node>
      <node id="2018">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="2015">
        <label>cmath</label>
      </node>
      <node id="2042">
        <label>Cache.h</label>
        <link refid="Cache_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
      </node>
      <node id="2022">
        <label>boost/archive/xml_oarchive.hpp</label>
      </node>
      <node id="2011">
        <label>string</label>
      </node>
      <node id="2007">
        <label>map</label>
      </node>
      <node id="2019">
        <label>boost/thread.hpp</label>
      </node>
      <node id="2032">
        <label>Net.h</label>
        <link refid="Net_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
        <childnode refid="2042" relation="include">
        </childnode>
        <childnode refid="2043" relation="include">
        </childnode>
        <childnode refid="2044" relation="include">
        </childnode>
      </node>
      <node id="2036">
        <label>Neuron.h</label>
        <link refid="Neuron_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
        <childnode refid="2037" relation="include">
        </childnode>
        <childnode refid="2038" relation="include">
        </childnode>
        <childnode refid="2040" relation="include">
        </childnode>
        <childnode refid="2041" relation="include">
        </childnode>
      </node>
      <node id="2006">
        <label>fstream</label>
      </node>
      <node id="2003">
        <label>Includes.h</label>
        <link refid="Includes_8h"/>
        <childnode refid="2004" relation="include">
        </childnode>
        <childnode refid="2005" relation="include">
        </childnode>
        <childnode refid="2006" relation="include">
        </childnode>
        <childnode refid="2007" relation="include">
        </childnode>
        <childnode refid="2008" relation="include">
        </childnode>
        <childnode refid="2009" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
        <childnode refid="2011" relation="include">
        </childnode>
        <childnode refid="2012" relation="include">
        </childnode>
        <childnode refid="2013" relation="include">
        </childnode>
        <childnode refid="2014" relation="include">
        </childnode>
        <childnode refid="2015" relation="include">
        </childnode>
        <childnode refid="2016" relation="include">
        </childnode>
        <childnode refid="2017" relation="include">
        </childnode>
        <childnode refid="2018" relation="include">
        </childnode>
        <childnode refid="2019" relation="include">
        </childnode>
        <childnode refid="2020" relation="include">
        </childnode>
        <childnode refid="2021" relation="include">
        </childnode>
        <childnode refid="2022" relation="include">
        </childnode>
        <childnode refid="2023" relation="include">
        </childnode>
        <childnode refid="2024" relation="include">
        </childnode>
        <childnode refid="2025" relation="include">
        </childnode>
        <childnode refid="2026" relation="include">
        </childnode>
        <childnode refid="2027" relation="include">
        </childnode>
        <childnode refid="2028" relation="include">
        </childnode>
        <childnode refid="2029" relation="include">
        </childnode>
        <childnode refid="2030" relation="include">
        </childnode>
      </node>
      <node id="2017">
        <label>boost/any.hpp</label>
      </node>
      <node id="2024">
        <label>boost/archive/text_oarchive.hpp</label>
      </node>
      <node id="2023">
        <label>boost/archive/xml_iarchive.hpp</label>
      </node>
      <node id="2029">
        <label>boost/serialization/version.hpp</label>
      </node>
      <node id="2030">
        <label>boost/progress.hpp</label>
      </node>
      <node id="2043">
        <label>Util.h</label>
        <link refid="Util_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
      </node>
      <node id="2009">
        <label>vector</label>
      </node>
      <node id="2033">
        <label>Object.h</label>
        <link refid="Object_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2034" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
      </node>
      <node id="2020">
        <label>boost/thread/barrier.hpp</label>
      </node>
      <node id="2031">
        <label>NetworkModel.h</label>
        <link refid="NetworkModel_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2032" relation="include">
        </childnode>
      </node>
      <node id="2005">
        <label>sstream</label>
      </node>
      <node id="2021">
        <label>boost/ref.hpp</label>
      </node>
      <node id="2016">
        <label>cstdlib</label>
      </node>
      <node id="2004">
        <label>iostream</label>
      </node>
      <node id="2027">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="2012">
        <label>algorithm</label>
      </node>
      <node id="2044">
        <label>Runner.h</label>
        <link refid="Runner_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2035" relation="include">
        </childnode>
        <childnode refid="2036" relation="include">
        </childnode>
      </node>
      <node id="2039">
        <label>Weight.h</label>
        <link refid="Weight_8h"/>
        <childnode refid="2003" relation="include">
        </childnode>
        <childnode refid="2033" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacepann">pann</innernamespace>
    <innernamespace refid="namespacepann_1_1NetworkModel">pann::NetworkModel</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//MultilayerPerceptron.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Includes_8h" kindref="compound">Includes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="NetworkModel_8h" kindref="compound">NetworkModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pann</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="namespacepann_1_1NetworkModel" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">NetworkModel</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TODO:<sp/>write<sp/>documentation</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespacepann_1_1NetworkModel_188223ff4c4a04103fcaefa1d899a2b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>*<sp/><ref refid="namespacepann_1_1NetworkModel_188223ff4c4a04103fcaefa1d899a2b42" kindref="member">MultilayerPerceptron</ref>(vector&lt;unsigned&gt;<sp/>layers,<sp/><ref refid="classpann_1_1ActivationFunction_1_1Base" kindref="compound">ActivationFunction::Base</ref>*<sp/>af)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>threads<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>*<sp/>net<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classpann_1_1Net" kindref="compound">Net</ref>(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layers.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;<sp/>vector&lt;unsigned&gt;<sp/>&gt;<sp/>mlp(layers.size());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Input<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>layers[0];<sp/>++i)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mlp[0].push_back(net-&gt;<ref refid="classpann_1_1Net_110f0471ee473197380146330d2ee0977" kindref="member">addInputNeuron</ref>());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(layers.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>owner<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>1;<sp/>l<sp/>&lt;<sp/>layers.size();<sp/>++l)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>layers[l];<sp/>++i)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mlp[l].push_back(net-&gt;<ref refid="classpann_1_1Net_1875e333ddaaaf4d8cc332c4ff816c584" kindref="member">addNeuron</ref>(af));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_160ede07661fe666b8923c50da10e1cb2" kindref="member">setNeuronOwner</ref>(mlp[l][i],<sp/>owner);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++owner<sp/>&gt;<sp/>threads)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owner<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mlp.size()<sp/>-<sp/>1;<sp/>i++)<sp/></highlight><highlight class="comment">//layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mlp[i].size();<sp/>j++)<sp/></highlight><highlight class="comment">//prev<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>mlp[i+1].size();<sp/>k++)<sp/></highlight><highlight class="comment">//next<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connection<sp/>from<sp/>current<sp/>layer<sp/>(i)<sp/>to<sp/>next<sp/>(i+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_15f793f0f9a0462093637d8d7b5fe7b0f" kindref="member">addConnection</ref>(mlp[i][j],<sp/>mlp[i+1][k],<sp/>1);<sp/></highlight><highlight class="comment">//TODO:<sp/>add<sp/>rand()<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>bias<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net-&gt;<ref refid="classpann_1_1Net_15f793f0f9a0462093637d8d7b5fe7b0f" kindref="member">addConnection</ref>(net-&gt;<ref refid="classpann_1_1Net_1179bae99437bcfc80e3477a9c01e0d62" kindref="member">getBiasId</ref>(),<sp/>mlp[i+1][k],<sp/>1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//May<sp/>be<sp/>we<sp/>should<sp/>save<sp/>mlp<sp/>for<sp/>next<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};<sp/></highlight><highlight class="comment">//pann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/booble/pann/trunk/src/Core/MultilayerPerceptron.cpp"/>
  </compounddef>
</doxygen>
